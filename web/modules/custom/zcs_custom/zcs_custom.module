<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\BubbleableMetadata;

/**
 * Implements hook_theme().
 */
function zcs_custom_theme($existing, $type, $theme, $path) {
  return [
    'portal_login' => [
      'variables' => [
        'title' => NULL,
        'description' => NULL,
        'module_path' => NULL,
      ],
      'template' => 'portal-login',
    ],
  ];
}


/**
 * Implements hook_form_alter() to add "Forgot Password?" link to the login form.
 */
function zcs_custom_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  // Target the user login form.
  if ($form_id == 'user_login_form') {
    // Add  "Forgot Password?" link at the end of the form.
    $form['forgot_password'] = [
      '#markup' => '<p><a href="' . \Drupal\Core\Url::fromRoute('user.pass')->toString() . '">' . t('Forgot password?') . '</a></p>',
      '#weight' => 10,
    ];
  }
  if ($form_id == 'change_pwd_form') {
    $form['#submit'][] = '_zcs_custom_form_submit';
  }
}


function _zcs_custom_form_submit(array &$form, FormStateInterface $form_state) {
  // Redirect to the home page.
  $form_state->setRedirect('<front>');
}

/**
 * Implements hook_menu_local_tasks_alter() to remove "Log in" and "Reset your password" tabs.
 */
function zcs_custom_menu_local_tasks_alter(array &$local_tasks) {

  $route_name = \DRUPAL::routeMatch()->getRouteName();
  if ($route_name == 'user.login' || $route_name == 'user.register'|| $route_name == 'user.pass') {
    unset($local_tasks['tabs'][0]['user.register']);
    unset($local_tasks['tabs'][0]['user.pass']);
    unset($local_tasks['tabs'][0]['user.login']);
  }
}


function zcs_custom_preprocess_page(array &$variables) {

  $route_name = \DRUPAL::routeMatch()->getRouteName();
  if ($route_name == 'change_pwd_page.change_password_form') {
    $theme = \Drupal::theme()->getActiveTheme();
    $logo_path = $theme->getLogo();
  
     // Get the file_url_generator service.
    $file_url_generator = \Drupal::service('file_url_generator');
  
     // Convert logo path to a full URL.
    $logo_url = $file_url_generator->generateAbsoluteString($logo_path);
    // Make it available to your Twig template:
    $variables['site_logo_url'] = $logo_url;
  }
 
}


function _password_policy_user_profile_form_submit() {
// do nothing:
}



/*
* hook_token_info()
*/

function zcs_custom_token_info() {
  $info = [];
  $info['types']['zcs_tokens'] = [
    'name' => t('ZCS Tokens'), 
    'description' => t('ZCS Tokens')
  ];
  $info['tokens']['zcs_tokens']['user_name'] = [
    'name' => t('Username'),
    'description' => t('Current Username'),
  ];
  $info['tokens']['zcs_tokens']['site_name'] = [
    'name' => t('Site Name'),
    'description' => t('Site Name'),
  ];
  $info['tokens']['zcs_tokens']['user_invite_activation_url'] = [
    'name' => t('carrier user activation url'),
    'description' => t('Carrier User Activation url'),
  ];
  $info['tokens']['zcs_tokens']['roles'] = [
    'name' => t('User roles'),
    'description' => t('User Roles'),
  ];
  $info['tokens']['zcs_tokens']['partner_name'] = [
    'name' => t('Partner Name'),
    'description' => t('Partner Name'),
  ];
  return $info;
}

/**
 * Implements hook_token_token().
 */
function zcs_custom_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  if ($type == 'zcs_tokens') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'user_name':
          $replacements[$original] = $data['user_name'];
          break;
        case 'user_invite_activation_url':
          $replacements[$original] = $data['user_invite_activation_url'];
          break;  
        case 'site_name':
          $replacements[$original] = $data['site_name'];
          break;   
        case 'roles':
          $replacements[$original] = $data['roles'];
          break;
        case 'partner_name':
          $replacements[$original] = $data['partner_name'];
          break;  
      }
    }
  }
  return $replacements;
}